6.2 Deep Learning-based Analysis2500 

In this part, we seek to build a deep learning based system to predict whether an urban renewal project can succeed in the end based on a set of criterions. Besides, it is also possible to know which criterion plays the most important role in the failure of a project. 


6.2.1 Training a deep network to predict whether an urban renewal project can succeed.

To begin with, we first list all the possible aspects/factors that may affect the development of an urban renewal project:
1. xxx
2. xxx
3. xxx
Moreover, we also design a rule to determine whether a project is successful and take it as the label. For simplicity, we regard all the projects that xx as a successful project. In practice, we take all the above factors as the input to a deep network and encourage the model to learn the mapping from these factors to the “successful” label. Formally, we take all the “successful” projects as the positive examples and the “failed” ones as the negative examples. Following the popular design of deep networks, we stack a set of residual blocks [xx] to build the model. As for the last layer that serves to predict whether a project would be successful or not, we enforce the last layer to have a single output neuron and append a Sigmoid function that maps the output to a probability within the range between 0 and 1. In this way, we regard the probability the larger than 0.5 as successful, and the rest whose value is equal to or lower than 0.5 as failed. In other words, this tasks can be cast into a binary classification task. To illustrate this, we depict the architecture of the model as well as all the inputs and output below.


Put a Figure here!


As for training, on one hand, we seek to maximize the predicted probability of the all the positive examples to approach 1. On the other hand, we also minimize the probability of the negative samples to approach 0. Interestingly, it can be well represented by the binary cross-entropy loss

Put an equation here!

In practice, we minimize the above objective and use stochastic gradient descent to train the model. Clearly, as shown in Figure xx, the loss drops very quickly as the training proceeds. In other words, the model successfully learns the mapping between the set of input factors and the label.


6.2.2 Finding the most important factor that contributes to the failure

Although we can use the binary classification model that can predict whether an urban renewal project can succeed, it should be more important to analyze the reasons behind the predictions, especially for those failure projects. In this work, we develop a gradient-based input factor analysis method to analyze which input factor contribute the most to the failure. Specifically, for all the examples that the model predict as “failure”, we align them with the label “successful” of value 1. 
